name: Publish release SDK to the Maven Central Repository

on:
  release:
    types: [published]

  push:
    branches: [typo/fix-rel]


env:
  CI: true

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_TOKEN_USERNAME }}
      JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN_PASSWORD }}
      JRELEASER_NEXUS2_SNAPSHOT_DEPLOY_USERNAME: ${{ secrets.MAVEN_CENTRAL_TOKEN_USERNAME }}
      JRELEASER_NEXUS2_SNAPSHOT_DEPLOY_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN_PASSWORD }}
      JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      JRELEASER_GPG_PUBLIC_KEY: ${{ vars.GPG_PUBLIC_KEY }}
      JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Alternative environment variable names (without JRELEASER_ prefix)
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      GPG_PUBLIC_KEY: ${{ vars.GPG_PUBLIC_KEY }}
      GPG_SECRET_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Download test data
        run: make test-data

      - name: Test
        run: ./gradlew check

      - name: Debug Environment Variables
        run: |
          echo "Checking GPG environment variables..."
          echo "JRELEASER_GPG_PUBLIC_KEY length: ${#JRELEASER_GPG_PUBLIC_KEY}"
          echo "JRELEASER_GPG_SECRET_KEY length: ${#JRELEASER_GPG_SECRET_KEY}"
          echo "JRELEASER_GPG_PASSPHRASE length: ${#JRELEASER_GPG_PASSPHRASE}"
          echo "JRELEASER_GPG_PUBLIC_KEY starts with: ${JRELEASER_GPG_PUBLIC_KEY:0:50}"
          echo "JRELEASER_GPG_PUBLIC_KEY ends with: ${JRELEASER_GPG_PUBLIC_KEY: -50}"
          echo ""
          echo "Checking alternative environment variable names..."
          echo "GPG_PUBLIC_KEY length: ${#GPG_PUBLIC_KEY}"
          echo "GPG_SECRET_KEY length: ${#GPG_SECRET_KEY}"
          echo "GPG_PASSPHRASE length: ${#GPG_PASSPHRASE}"

      - name: Verify JReleaser
        run: |
          export JRELEASER_GPG_PASSPHRASE="$JRELEASER_GPG_PASSPHRASE"
          export JRELEASER_GPG_PUBLIC_KEY="$JRELEASER_GPG_PUBLIC_KEY"
          export JRELEASER_GPG_SECRET_KEY="$JRELEASER_GPG_SECRET_KEY"
          export JRELEASER_GITHUB_TOKEN="$JRELEASER_GITHUB_TOKEN"
          export JRELEASER_MAVENCENTRAL_USERNAME="$JRELEASER_MAVENCENTRAL_USERNAME"
          export JRELEASER_MAVENCENTRAL_PASSWORD="$JRELEASER_MAVENCENTRAL_PASSWORD"
          ./gradlew jreleaserConfig --stacktrace

      - name: Stage artifacts
        run: |
          export JRELEASER_GPG_PASSPHRASE="$JRELEASER_GPG_PASSPHRASE"
          export JRELEASER_GPG_PUBLIC_KEY="$JRELEASER_GPG_PUBLIC_KEY"
          export JRELEASER_GPG_SECRET_KEY="$JRELEASER_GPG_SECRET_KEY"
          export JRELEASER_GITHUB_TOKEN="$JRELEASER_GITHUB_TOKEN"
          export JRELEASER_MAVENCENTRAL_USERNAME="$JRELEASER_MAVENCENTRAL_USERNAME"
          export JRELEASER_MAVENCENTRAL_PASSWORD="$JRELEASER_MAVENCENTRAL_PASSWORD"
          ./gradlew clean publish -Prelease --stacktrace

      - name: Deploy to Maven Central
        run: |
          export JRELEASER_GPG_PASSPHRASE="$JRELEASER_GPG_PASSPHRASE"
          export JRELEASER_GPG_PUBLIC_KEY="$JRELEASER_GPG_PUBLIC_KEY"
          export JRELEASER_GPG_SECRET_KEY="$JRELEASER_GPG_SECRET_KEY"
          export JRELEASER_GITHUB_TOKEN="$JRELEASER_GITHUB_TOKEN"
          export JRELEASER_MAVENCENTRAL_USERNAME="$JRELEASER_MAVENCENTRAL_USERNAME"
          export JRELEASER_MAVENCENTRAL_PASSWORD="$JRELEASER_MAVENCENTRAL_PASSWORD"
          ./gradlew jreleaserDeploy --debug --info --stacktrace
